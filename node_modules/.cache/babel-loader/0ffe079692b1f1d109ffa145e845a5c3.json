{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshitha\\\\covid-help\\\\src\\\\components\\\\Charts\\\\Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Charts = ({\n  data,\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData[0] ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 29\n  }, this) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['blue', 'green', 'red'],\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current status in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [country ? barChart : lineChart, \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Charts, \"/a2tOhgchVZyHv049XtclKtfSrg=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/Harshitha/covid-help/src/components/Charts/Charts.js"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","Charts","data","country","dailyData","setDailyData","fetchAPI","initialDailyData","lineChart","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","value","recovered","legend","display","title","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAAoB;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6BT,QAAQ,CAAC,EAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,QAAQ,GAAG,YAAY;AACzB,YAAMC,gBAAgB,GAAG,MAAMT,cAAc,EAA7C;AAEAO,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AAGH,KAND;;AAOAD,IAAAA,QAAQ;AAEX,GAVQ,EAUN,EAVM,CAAT;AAWA,QAAME,SAAS,GAEPJ,SAAS,CAAC,CAAD,CAAT,gBAAgB,QAAC,IAAD;AACZ,IAAA,IAAI,EAAE;AACFK,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAACE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAeA,SAA7B,CADE;AAEPC,QAAAA,KAAK,EAAC,UAFC;AAGPC,QAAAA,WAAW,EAAC,SAHL;AAIPC,QAAAA,IAAI,EAAC;AAJE,OAAD,EAMP;AACCd,QAAAA,IAAI,EAACE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACO,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADN;AAECH,QAAAA,KAAK,EAAC,QAFP;AAGCC,QAAAA,WAAW,EAAC,KAHb;AAICG,QAAAA,eAAe,EAAC,mBAJjB;AAKCF,QAAAA,IAAI,EAAC;AALN,OANO;AAFR;AADM;AAAA;AAAA;AAAA;AAAA,UAAhB,GAmBM,IArBd;AA4BA,QAAMG,QAAQ,GACVjB,IAAI,CAACW,SAAL,gBACA,QAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACFJ,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAY,WAAZ,EAAwB,QAAxB,CADL;AAEFG,MAAAA,QAAQ,EAAC,CAAC;AACNE,QAAAA,KAAK,EAAC,QADA;AAENI,QAAAA,eAAe,EAAC,CAAC,MAAD,EAAQ,OAAR,EAAgB,KAAhB,CAFV;AAGNhB,QAAAA,IAAI,EAAC,CAACA,IAAI,CAACW,SAAL,CAAeO,KAAhB,EAAsBlB,IAAI,CAACmB,SAAL,CAAeD,KAArC,EAA2ClB,IAAI,CAACe,MAAL,CAAYG,KAAvD;AAHC,OAAD;AAFP,KADN;AAUA,IAAA,OAAO,EAAE;AACLE,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAC;AAAT,OADF;AAELC,MAAAA,KAAK,EAAC;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAcE,QAAAA,IAAI,EAAE,qBAAoBtB,OAAQ;AAAhD;AAFD;AAVT;AAAA;AAAA;AAAA;AAAA,UADA,GAkBI,IAnBR;AAuBA,sBACI;AAAA,eACKA,OAAO,GAACgB,QAAD,GAAUX,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtED;;GAAMP,M;;KAAAA,M;AAwEN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nconst Charts = ({data,country}) => {\r\n    const [dailyData, setDailyData ] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n\r\n            setDailyData(initialDailyData);\r\n            \r\n            \r\n        }\r\n        fetchAPI();\r\n        \r\n    }, []);\r\n    const lineChart = (\r\n\r\n            dailyData[0] ? (<Line\r\n                data={{\r\n                    labels: dailyData.map(({date})=>date),\r\n                    datasets: [{\r\n                        data:dailyData.map(({confirmed})=>confirmed),\r\n                        label:'Infected',\r\n                        borderColor:'#3333ff',\r\n                        fill:true,\r\n\r\n                    }, {\r\n                        data:dailyData.map(({deaths})=>deaths),\r\n                        label:'Deaths',\r\n                        borderColor:'red',\r\n                        backgroundColor:'rgba(255,0,0,0.5)',\r\n                        fill:true,\r\n\r\n                    }],\r\n\r\n                }}\r\n            />) : null\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n    const barChart = (\r\n        data.confirmed?(\r\n        <Bar\r\n        data={{\r\n            labels:['Infected','Recovered','Deaths'],\r\n            datasets:[{\r\n                label:'People',\r\n                backgroundColor:['blue','green','red'],\r\n                data:[data.confirmed.value,data.recovered.value,data.deaths.value]\r\n            }]\r\n\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true,text:`Current status in ${country}`},\r\n\r\n        }}\r\n\r\n\r\n        />):null\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            {country?barChart:lineChart};\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts\r\n"]},"metadata":{},"sourceType":"module"}